//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PostComment
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostDTO", Namespace="http://schemas.datacontract.org/2004/07/PostComment")]
    public partial class PostDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private PostComment.CommentDTO[] CommentsField;
        
        private int PostIdField;
        
        private string TitleField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PostComment.CommentDTO[] Comments
        {
            get
            {
                return this.CommentsField;
            }
            set
            {
                this.CommentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostId
        {
            get
            {
                return this.PostIdField;
            }
            set
            {
                this.PostIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentDTO", Namespace="http://schemas.datacontract.org/2004/07/PostComment", IsReference=true)]
    public partial class CommentDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CommentIdField;
        
        private string CommentTextField;
        
        private PostComment.PostDTO PostField;
        
        private int PostIdField;
        
        private int PostPostIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentId
        {
            get
            {
                return this.CommentIdField;
            }
            set
            {
                this.CommentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText
        {
            get
            {
                return this.CommentTextField;
            }
            set
            {
                this.CommentTextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PostComment.PostDTO Post
        {
            get
            {
                return this.PostField;
            }
            set
            {
                this.PostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostId
        {
            get
            {
                return this.PostIdField;
            }
            set
            {
                this.PostIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostPostId
        {
            get
            {
                return this.PostPostIdField;
            }
            set
            {
                this.PostPostIdField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IPostComment")]
public interface IPostComment
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/Cleanup", ReplyAction="http://tempuri.org/IPost/CleanupResponse")]
    void Cleanup();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/Cleanup", ReplyAction="http://tempuri.org/IPost/CleanupResponse")]
    System.Threading.Tasks.Task CleanupAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/GetPostById", ReplyAction="http://tempuri.org/IPost/GetPostByIdResponse")]
    PostComment.PostDTO GetPostById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/GetPostById", ReplyAction="http://tempuri.org/IPost/GetPostByIdResponse")]
    System.Threading.Tasks.Task<PostComment.PostDTO> GetPostByIdAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/GetPostByTitle", ReplyAction="http://tempuri.org/IPost/GetPostByTitleResponse")]
    PostComment.PostDTO GetPostByTitle(string title);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/GetPostByTitle", ReplyAction="http://tempuri.org/IPost/GetPostByTitleResponse")]
    System.Threading.Tasks.Task<PostComment.PostDTO> GetPostByTitleAsync(string title);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/SubmitPost", ReplyAction="http://tempuri.org/IPost/SubmitPostResponse")]
    PostComment.PostDTO SubmitPost(PostComment.PostDTO post);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/SubmitPost", ReplyAction="http://tempuri.org/IPost/SubmitPostResponse")]
    System.Threading.Tasks.Task<PostComment.PostDTO> SubmitPostAsync(PostComment.PostDTO post);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/UpdatePost", ReplyAction="http://tempuri.org/IPost/UpdatePostResponse")]
    PostComment.PostDTO UpdatePost(PostComment.PostDTO newPost);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/UpdatePost", ReplyAction="http://tempuri.org/IPost/UpdatePostResponse")]
    System.Threading.Tasks.Task<PostComment.PostDTO> UpdatePostAsync(PostComment.PostDTO newPost);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/DeletePost", ReplyAction="http://tempuri.org/IPost/DeletePostResponse")]
    int DeletePost(int postId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/DeletePost", ReplyAction="http://tempuri.org/IPost/DeletePostResponse")]
    System.Threading.Tasks.Task<int> DeletePostAsync(int postId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/GetAllPosts", ReplyAction="http://tempuri.org/IPost/GetAllPostsResponse")]
    PostComment.PostDTO[] GetAllPosts();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPost/GetAllPosts", ReplyAction="http://tempuri.org/IPost/GetAllPostsResponse")]
    System.Threading.Tasks.Task<PostComment.PostDTO[]> GetAllPostsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/GetCommentById", ReplyAction="http://tempuri.org/IComment/GetCommentByIdResponse")]
    PostComment.CommentDTO GetCommentById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/GetCommentById", ReplyAction="http://tempuri.org/IComment/GetCommentByIdResponse")]
    System.Threading.Tasks.Task<PostComment.CommentDTO> GetCommentByIdAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/SubmitComment", ReplyAction="http://tempuri.org/IComment/SubmitCommentResponse")]
    PostComment.CommentDTO SubmitComment(PostComment.CommentDTO comment);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/SubmitComment", ReplyAction="http://tempuri.org/IComment/SubmitCommentResponse")]
    System.Threading.Tasks.Task<PostComment.CommentDTO> SubmitCommentAsync(PostComment.CommentDTO comment);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/AddCommment", ReplyAction="http://tempuri.org/IComment/AddCommmentResponse")]
    PostComment.CommentDTO AddCommment(int postId, PostComment.CommentDTO comment);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/AddCommment", ReplyAction="http://tempuri.org/IComment/AddCommmentResponse")]
    System.Threading.Tasks.Task<PostComment.CommentDTO> AddCommmentAsync(int postId, PostComment.CommentDTO comment);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/UpdateComment", ReplyAction="http://tempuri.org/IComment/UpdateCommentResponse")]
    PostComment.CommentDTO UpdateComment(PostComment.CommentDTO oldComment, PostComment.CommentDTO newComment);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/UpdateComment", ReplyAction="http://tempuri.org/IComment/UpdateCommentResponse")]
    System.Threading.Tasks.Task<PostComment.CommentDTO> UpdateCommentAsync(PostComment.CommentDTO oldComment, PostComment.CommentDTO newComment);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/DeleteComment", ReplyAction="http://tempuri.org/IComment/DeleteCommentResponse")]
    bool DeleteComment(int commentId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComment/DeleteComment", ReplyAction="http://tempuri.org/IComment/DeleteCommentResponse")]
    System.Threading.Tasks.Task<bool> DeleteCommentAsync(int commentId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoadData/GetAllPostsAndRelatedComments", ReplyAction="http://tempuri.org/ILoadData/GetAllPostsAndRelatedCommentsResponse")]
    PostComment.PostDTO[] GetAllPostsAndRelatedComments();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoadData/GetAllPostsAndRelatedComments", ReplyAction="http://tempuri.org/ILoadData/GetAllPostsAndRelatedCommentsResponse")]
    System.Threading.Tasks.Task<PostComment.PostDTO[]> GetAllPostsAndRelatedCommentsAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IPostCommentChannel : IPostComment, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class PostCommentClient : System.ServiceModel.ClientBase<IPostComment>, IPostComment
{
    
    public PostCommentClient()
    {
    }
    
    public PostCommentClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public PostCommentClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PostCommentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PostCommentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void Cleanup()
    {
        base.Channel.Cleanup();
    }
    
    public System.Threading.Tasks.Task CleanupAsync()
    {
        return base.Channel.CleanupAsync();
    }
    
    public PostComment.PostDTO GetPostById(int id)
    {
        return base.Channel.GetPostById(id);
    }
    
    public System.Threading.Tasks.Task<PostComment.PostDTO> GetPostByIdAsync(int id)
    {
        return base.Channel.GetPostByIdAsync(id);
    }
    
    public PostComment.PostDTO GetPostByTitle(string title)
    {
        return base.Channel.GetPostByTitle(title);
    }
    
    public System.Threading.Tasks.Task<PostComment.PostDTO> GetPostByTitleAsync(string title)
    {
        return base.Channel.GetPostByTitleAsync(title);
    }
    
    public PostComment.PostDTO SubmitPost(PostComment.PostDTO post)
    {
        return base.Channel.SubmitPost(post);
    }
    
    public System.Threading.Tasks.Task<PostComment.PostDTO> SubmitPostAsync(PostComment.PostDTO post)
    {
        return base.Channel.SubmitPostAsync(post);
    }
    
    public PostComment.PostDTO UpdatePost(PostComment.PostDTO newPost)
    {
        return base.Channel.UpdatePost(newPost);
    }
    
    public System.Threading.Tasks.Task<PostComment.PostDTO> UpdatePostAsync(PostComment.PostDTO newPost)
    {
        return base.Channel.UpdatePostAsync(newPost);
    }
    
    public int DeletePost(int postId)
    {
        return base.Channel.DeletePost(postId);
    }
    
    public System.Threading.Tasks.Task<int> DeletePostAsync(int postId)
    {
        return base.Channel.DeletePostAsync(postId);
    }
    
    public PostComment.PostDTO[] GetAllPosts()
    {
        return base.Channel.GetAllPosts();
    }
    
    public System.Threading.Tasks.Task<PostComment.PostDTO[]> GetAllPostsAsync()
    {
        return base.Channel.GetAllPostsAsync();
    }
    
    public PostComment.CommentDTO GetCommentById(int id)
    {
        return base.Channel.GetCommentById(id);
    }
    
    public System.Threading.Tasks.Task<PostComment.CommentDTO> GetCommentByIdAsync(int id)
    {
        return base.Channel.GetCommentByIdAsync(id);
    }
    
    public PostComment.CommentDTO SubmitComment(PostComment.CommentDTO comment)
    {
        return base.Channel.SubmitComment(comment);
    }
    
    public System.Threading.Tasks.Task<PostComment.CommentDTO> SubmitCommentAsync(PostComment.CommentDTO comment)
    {
        return base.Channel.SubmitCommentAsync(comment);
    }
    
    public PostComment.CommentDTO AddCommment(int postId, PostComment.CommentDTO comment)
    {
        return base.Channel.AddCommment(postId, comment);
    }
    
    public System.Threading.Tasks.Task<PostComment.CommentDTO> AddCommmentAsync(int postId, PostComment.CommentDTO comment)
    {
        return base.Channel.AddCommmentAsync(postId, comment);
    }
    
    public PostComment.CommentDTO UpdateComment(PostComment.CommentDTO oldComment, PostComment.CommentDTO newComment)
    {
        return base.Channel.UpdateComment(oldComment, newComment);
    }
    
    public System.Threading.Tasks.Task<PostComment.CommentDTO> UpdateCommentAsync(PostComment.CommentDTO oldComment, PostComment.CommentDTO newComment)
    {
        return base.Channel.UpdateCommentAsync(oldComment, newComment);
    }
    
    public bool DeleteComment(int commentId)
    {
        return base.Channel.DeleteComment(commentId);
    }
    
    public System.Threading.Tasks.Task<bool> DeleteCommentAsync(int commentId)
    {
        return base.Channel.DeleteCommentAsync(commentId);
    }
    
    public PostComment.PostDTO[] GetAllPostsAndRelatedComments()
    {
        return base.Channel.GetAllPostsAndRelatedComments();
    }
    
    public System.Threading.Tasks.Task<PostComment.PostDTO[]> GetAllPostsAndRelatedCommentsAsync()
    {
        return base.Channel.GetAllPostsAndRelatedCommentsAsync();
    }
}
